/**
 * Valid codes 1-14 where
    1 - No License (None)
    2 - The Unlicense (Unlicense)
    3 - MIT License (MIT)
    4 - GNU General Public License v2.0 (GNU GPLv2)
    5 - GNU General Public License v3.0 (GNU GPLv3)
    6 - GNU Lesser General Public License v2.1 (GNU LGPLv2.1)
    7 - GNU Lesser General Public License v3.0 (GNU LGPLv3)
    8 - BSD 2-clause 'Simplified' license (BSD-2-Clause)
    9 - BSD 3-clause 'New' Or 'Revised' license* (BSD-3-Clause)
    10 - Mozilla Public License 2.0 (MPL-2.0)
    11 - Open Software License 3.0 (OSL-3.0)
    12 - Apache 2.0 (Apache-2.0)
    13 - GNU Affero General Public License (GNU AGPLv3)
    14 - Business Source License (BSL 1.1)
 */
declare enum LicenseType {
    No = 1,
    Unlicense = 2,
    MIT = 3,
    GPL_v2 = 4,
    GPL_v3 = 5,
    LGPL_v2_1 = 6,
    LGPL_v3 = 7,
    BSD_2_Clause = 8,
    BSD_3_Clause = 9,
    MPL_2_0 = 10,
    OSL_3_0 = 11,
    Apache_2_0 = 12,
    AGPL_v3 = 13,
    BSC_1_1 = 14
}
interface ContractVerifyOption {
    networkId?: number;
    contractaddress: string;
    sourceCode: string;
    codeformat?: string;
    contractname: string;
    compilerversion: string;
    optimizationUsed?: number;
    runs?: number;
    constructorArguements?: string;
    evmversion?: string;
    licenseType?: LicenseType;
}
interface ScanAPIResponse {
    code: number;
    message: string;
    data?: any;
}
/**
 Success:
 {
    code: 0,
    message: 'OK',
    data: '00d290cca9978af20a24994a2e0c4ca415266216ee4e2b3c21'
 }

 Fail:
 { code: 1, message: 'compiler version 0.8.15 not exits' }
 */
export declare function verifySourceCode(options: ContractVerifyOption): Promise<ScanAPIResponse>;
export declare function checkVerifyStatus(guid: string, networkId?: number): Promise<object>;
export {};
//# sourceMappingURL=scan-cli.d.ts.map